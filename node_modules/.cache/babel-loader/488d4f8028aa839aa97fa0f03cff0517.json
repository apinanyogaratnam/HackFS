{"ast":null,"code":"var _jsxFileName = \"/Users/apinanyogaratnam/Desktop/livepeer-browser-extension/src/Components/Modal.js\";\nimport React from 'react';\nimport { X } from 'react-feather';\nimport Draggable from 'react-draggable';\nimport { ModalContext } from '../Contexts/ModalProvider';\nimport livepeer_data from '../livepeer-integration/livepeer_data';\nimport '../css/window.scss';\n\nconst Modal = () => {\n  return /*#__PURE__*/React.createElement(ModalContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, ({\n    windowPosition,\n    hasDraggedWindowPosition,\n    extensionId,\n    getExtensionId\n  }) => /*#__PURE__*/React.createElement(Draggable, {\n    handle: \".modal-handle\",\n    defaultPosition: {\n      x: windowPosition.x,\n      y: windowPosition.y\n    },\n    position: hasDraggedWindowPosition ? {\n      x: windowPosition.x,\n      y: windowPosition.y\n    } : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"modal\",\n    className: \"modal-window\",\n    style: {\n      transform: windowPosition\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-window-inner-border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-handle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-close-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(X, {\n    color: \"#5d6484\",\n    size: \"14\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 23\n    }\n  }, extensionId), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getExtensionId,\n    className: \"modal-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 23\n    }\n  }, \"Get Extension ID\"), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }\n  }, \"Connect via OBS Studio:\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }), \"Set OBS settings: settings>stream set service to custom\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }), \"set server to: \", livepeer_data.livepeerServerUrl, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }), \"set stream key to: \", livepeer_data.streamKey))))))));\n};\n\nexport default Modal;","map":{"version":3,"sources":["/Users/apinanyogaratnam/Desktop/livepeer-browser-extension/src/Components/Modal.js"],"names":["React","X","Draggable","ModalContext","livepeer_data","Modal","windowPosition","hasDraggedWindowPosition","extensionId","getExtensionId","x","y","transform","livepeerServerUrl","streamKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,CAAT,QAAkB,eAAlB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,OAAO,oBAAP;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA,wBAAlB;AAA4CC,IAAAA,WAA5C;AAAyDC,IAAAA;AAAzD,GAAD,kBACC,oBAAC,SAAD;AACE,IAAA,MAAM,EAAC,eADT;AAEE,IAAA,eAAe,EAAE;AAACC,MAAAA,CAAC,EAAEJ,cAAc,CAACI,CAAnB;AAAsBC,MAAAA,CAAC,EAAEL,cAAc,CAACK;AAAxC,KAFnB;AAGE,IAAA,QAAQ,EAAEJ,wBAAwB,GAAG;AAAEG,MAAAA,CAAC,EAAEJ,cAAc,CAACI,CAApB;AAAuBC,MAAAA,CAAC,EAAEL,cAAc,CAACK;AAAzC,KAAH,GAAkD,IAHtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAK,IAAA,EAAE,EAAC,OAAR;AAAgB,IAAA,SAAS,EAAC,cAA1B;AAAyC,IAAA,KAAK,EAAE;AAC9CC,MAAAA,SAAS,EAAEN;AADmC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,uDACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,CAAD;AAAG,IAAA,KAAK,EAAC,SAAT;AAAmB,IAAA,IAAI,EAAC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,eAME;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,WAAL,CADF,eAEE;AACE,IAAA,OAAO,EAAEC,cADX;AAEE,IAAA,SAAS,EAAC,cAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAQE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,0EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,qBAKkBL,aAAa,CAACS,iBALhC,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,yBAOsBT,aAAa,CAACU,SAPpC,CARF,CANF,CADF,CADJ,CAHF,CALF,CAFJ,CADF;AA6CD,CA9CD;;AAgDA,eAAeT,KAAf","sourcesContent":["import React from 'react';\nimport { X } from 'react-feather';\nimport Draggable from 'react-draggable';\nimport { ModalContext } from '../Contexts/ModalProvider';\nimport livepeer_data from '../livepeer-integration/livepeer_data';\nimport '../css/window.scss';\n\nconst Modal = () => {\n  return (\n    <ModalContext.Consumer>\n      {({ windowPosition, hasDraggedWindowPosition, extensionId, getExtensionId }) => (\n        <Draggable\n          handle=\".modal-handle\"\n          defaultPosition={{x: windowPosition.x, y: windowPosition.y}}\n          position={hasDraggedWindowPosition ? { x: windowPosition.x, y: windowPosition.y } : null}\n        >\n          <div id=\"modal\" className=\"modal-window\" style={{\n            transform: windowPosition,\n        }}>\n            <div className=\"modal-window-inner-border\">\n                <>\n                  <div className=\"modal-body\">\n                    <div className=\"modal-handle\">\n                      <div className=\"modal-close-button\">\n                        <X color=\"#5d6484\" size=\"14\" />\n                      </div>\n                    </div>\n                    <div className=\"modal-content\">\n                      <h3>{extensionId}</h3>\n                      <button\n                        onClick={getExtensionId}\n                        className=\"modal-button\"\n                      >\n                        Get Extension ID\n                      </button>\n                      <h4 className=\"text\">\n                        Connect via OBS Studio:\n                        <br />\n                        Set OBS settings: settings>stream set service to custom\n                        <br />\n                        set server to: {livepeer_data.livepeerServerUrl}\n                        <br />\n                        set stream key to: {livepeer_data.streamKey}\n                      </h4>\n                    </div>\n                  </div>\n                </>\n              </div>\n          </div>\n        </Draggable>\n      )}\n    </ModalContext.Consumer>\n  );\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}