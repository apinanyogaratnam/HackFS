{"ast":null,"code":"import React from'react';import{X}from'react-feather';import Draggable from'react-draggable';import{ModalContext}from'../Contexts/ModalProvider';import livepeer_data from'../livepeer-integration/livepeer_data';var Modal=function Modal(){return React.createElement(ModalContext.Consumer,null,function(_ref){var windowPosition=_ref.windowPosition,hasDraggedWindowPosition=_ref.hasDraggedWindowPosition,extensionId=_ref.extensionId,getExtensionId=_ref.getExtensionId;return React.createElement(Draggable,{handle:\".modal-handle\",defaultPosition:{x:windowPosition.x,y:windowPosition.y},position:hasDraggedWindowPosition?{x:windowPosition.x,y:windowPosition.y}:null},React.createElement(\"div\",{id:\"modal\",className:\"modal-window\",style:{transform:windowPosition}},React.createElement(\"div\",{className:\"modal-window-inner-border\"},React.createElement(React.Fragment,null,React.createElement(\"div\",{className:\"modal-body\"},React.createElement(\"div\",{className:\"modal-handle\"},React.createElement(\"div\",{className:\"modal-close-button\"},React.createElement(X,{color:\"#5d6484\",size:\"14\"}))),React.createElement(\"div\",{className:\"modal-content\"},React.createElement(\"h3\",null,extensionId),React.createElement(\"button\",{onClick:getExtensionId,className:\"modal-button\"},\"Get Extension ID\"),React.createElement(\"h4\",null,\"Connect via OBS Studio:\",React.createElement(\"br\",null),\"Set OBS settings: settings>stream set service to custom\",React.createElement(\"br\",null),\"set server to: \",livepeer_data.livepeerServerUrl,React.createElement(\"br\",null),\"set stream key to: \",livepeer_data.streamKey)))))));});};export default Modal;","map":{"version":3,"sources":["/Users/apinanyogaratnam/Desktop/livepeer-browser-extension/src/Components/Modal.js"],"names":["React","X","Draggable","ModalContext","livepeer_data","Modal","windowPosition","hasDraggedWindowPosition","extensionId","getExtensionId","x","y","transform","livepeerServerUrl","streamKey"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,CAAT,KAAkB,eAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,iBAAtB,CACA,OAASC,YAAT,KAA6B,2BAA7B,CACA,MAAOC,CAAAA,aAAP,KAA0B,uCAA1B,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAClB,MACE,qBAAC,YAAD,CAAc,QAAd,MACG,kBAAGC,CAAAA,cAAH,MAAGA,cAAH,CAAmBC,wBAAnB,MAAmBA,wBAAnB,CAA6CC,WAA7C,MAA6CA,WAA7C,CAA0DC,cAA1D,MAA0DA,cAA1D,OACC,qBAAC,SAAD,EACE,MAAM,CAAC,eADT,CAEE,eAAe,CAAE,CAACC,CAAC,CAAEJ,cAAc,CAACI,CAAnB,CAAsBC,CAAC,CAAEL,cAAc,CAACK,CAAxC,CAFnB,CAGE,QAAQ,CAAEJ,wBAAwB,CAAG,CAAEG,CAAC,CAAEJ,cAAc,CAACI,CAApB,CAAuBC,CAAC,CAAEL,cAAc,CAACK,CAAzC,CAAH,CAAkD,IAHtF,EAKE,2BAAK,EAAE,CAAC,OAAR,CAAgB,SAAS,CAAC,cAA1B,CAAyC,KAAK,CAAE,CAC9CC,SAAS,CAAEN,cADmC,CAAhD,EAGE,2BAAK,SAAS,CAAC,2BAAf,EACI,wCACE,2BAAK,SAAS,CAAC,YAAf,EACE,2BAAK,SAAS,CAAC,cAAf,EACE,2BAAK,SAAS,CAAC,oBAAf,EACE,oBAAC,CAAD,EAAG,KAAK,CAAC,SAAT,CAAmB,IAAI,CAAC,IAAxB,EADF,CADF,CADF,CAME,2BAAK,SAAS,CAAC,eAAf,EACE,8BAAKE,WAAL,CADF,CAEE,8BACE,OAAO,CAAEC,cADX,CAEE,SAAS,CAAC,cAFZ,qBAFF,CAQE,wDAEE,8BAFF,2DAIE,8BAJF,mBAKkBL,aAAa,CAACS,iBALhC,CAME,8BANF,uBAOsBT,aAAa,CAACU,SAPpC,CARF,CANF,CADF,CADJ,CAHF,CALF,CADD,EADH,CADF,CA6CD,CA9CD,CAgDA,cAAeT,CAAAA,KAAf","sourcesContent":["import React from 'react';\nimport { X } from 'react-feather';\nimport Draggable from 'react-draggable';\nimport { ModalContext } from '../Contexts/ModalProvider';\nimport livepeer_data from '../livepeer-integration/livepeer_data';\n\nconst Modal = () => {\n  return (\n    <ModalContext.Consumer>\n      {({ windowPosition, hasDraggedWindowPosition, extensionId, getExtensionId }) => (\n        <Draggable\n          handle=\".modal-handle\"\n          defaultPosition={{x: windowPosition.x, y: windowPosition.y}}\n          position={hasDraggedWindowPosition ? { x: windowPosition.x, y: windowPosition.y } : null}\n        >\n          <div id=\"modal\" className=\"modal-window\" style={{\n            transform: windowPosition,\n        }}>\n            <div className=\"modal-window-inner-border\">\n                <>\n                  <div className=\"modal-body\">\n                    <div className=\"modal-handle\">\n                      <div className=\"modal-close-button\">\n                        <X color=\"#5d6484\" size=\"14\" />\n                      </div>\n                    </div>\n                    <div className=\"modal-content\">\n                      <h3>{extensionId}</h3>\n                      <button\n                        onClick={getExtensionId}\n                        className=\"modal-button\"\n                      >\n                        Get Extension ID\n                      </button>\n                      <h4>\n                        Connect via OBS Studio:\n                        <br />\n                        Set OBS settings: settings>stream set service to custom\n                        <br />\n                        set server to: {livepeer_data.livepeerServerUrl}\n                        <br />\n                        set stream key to: {livepeer_data.streamKey}\n                      </h4>\n                    </div>\n                  </div>\n                </>\n              </div>\n          </div>\n        </Draggable>\n      )}\n    </ModalContext.Consumer>\n  );\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}