{"version":3,"sources":["Hooks/useWindowPosition.js","Contexts/ModalProvider.js","Livepeer/live_peer_data.js","Livepeer/content_livepeer.js","Components/window_content.js","Components/Modal.js","App.js","index.js"],"names":["useWindowPosition","windowPosition","x","y","ModalContext","React","createContext","ModalProvider","children","useState","undefined","extensionId","setExtensionId","useEffect","window","addEventListener","event","source","data","type","Provider","value","getExtensionId","postMessage","live_peer_data","content","WindowContent","Livepeer","require","apiKey","process","livepeerObject","setData","streamUrl","setStreamUrl","Stream","create","then","res","console","log","someData","a","url","id","axios","get","headers","Authorization","listOfAllStreams","mp4Url","className","livePeerServerUrl","streamKey","playbackId","onClick","src","Modal","Consumer","hasDraggedWindowPosition","handle","defaultPosition","position","style","transform","App","ReactDOM","render","document","getElementById"],"mappings":"iPAOeA,EANW,WACxB,MAAO,CACLC,eAAiB,CAAEC,EAAG,IAAMC,GAAI,MCAvBC,EAAeC,IAAMC,cAAc,IAiCjCC,EA/BO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACfP,EAAmBD,IAAnBC,eACR,EAAsCQ,wBAASC,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAgBA,OAVAC,qBAAU,WAERC,OAAOC,iBAAiB,WAAW,SAASC,GACtCA,EAAMC,SAAWH,QACjBE,EAAME,KAAKC,MAA6B,wBAApBH,EAAME,KAAKC,MACjCP,EAAeI,EAAME,KAAKP,kBAG7B,IAGD,kBAACP,EAAagB,SAAd,CACEC,MAAO,CACLV,cACAW,eAlBN,WACER,OAAOS,YAAY,CAAEJ,KAAM,oBAAsB,MAkB7ClB,mBAGDO,I,iCCzBQgB,EANQ,CACnB,kBAAqB,iCACrB,UAAa,+BACb,YAAe,wE,kECyBJC,EA5BC,CACZ,KAAQ,cACR,SAAY,CACR,CACI,KAAQ,OACR,QAAW,IACX,IAAO,GACP,MAAS,KACT,OAAU,KAEd,CACI,KAAQ,OACR,QAAW,IACX,IAAO,GACP,MAAS,IACT,OAAU,KAEd,CACI,KAAQ,OACR,QAAW,IACX,IAAO,GACP,MAAS,IACT,OAAU,MAGlB,QAAU,GCuECC,EA5EO,WAElB,IAAMC,EAAWC,EAAQ,IACnBC,EAASC,uCACTC,EAAiB,IAAIJ,EAASE,GAQpC,MAAwBpB,mBAAS,IAAjC,mBAAOS,EAAP,KAAac,EAAb,KACA,EAAkCvB,mBAAS,MAA3C,mBAAOwB,EAAP,KAAkBC,EAAlB,KAWArB,qBAAU,WAPNkB,EAAeI,OAAOC,OAAOX,GAC5BY,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZN,EAAQM,QAMb,IAGH,IAUMG,EAAQ,uCAAG,8BAAAC,EAAA,6DACPC,EADO,6DACqDzB,EAAK0B,IAD1D,SAGkBC,IAAMC,IAAIH,EAAK,CAC1CI,QAAS,CACLC,cAAc,UAAD,OAAYnB,MALpB,OAGPoB,EAHO,OAQbV,QAAQC,IAAIS,GACZV,QAAQC,IAAIS,EAAiB/B,KAAK,GAAGgC,QACrChB,EAAae,EAAiB/B,KAAK,GAAGgC,QAVzB,2CAAH,qDAed,OACI,6BACI,wBAAIC,UAAU,QAAd,0BAEI,6BAFJ,8BAGgC,IAHhC,iCAII,6BAJJ,kBAKoB3B,EAAe4B,kBAC/B,6BAEA,0CAAgBlC,EAAKmC,WACrB,yEAA+CnC,EAAKoC,WAApD,eACA,yCAAepC,EAAK0B,IACpB,wCAAcX,IAElB,4BAAQsB,QAASd,GAAjB,kBAEA,kBAAC,IAAD,CAAae,IAAKvB,MCxCfwB,EA5CD,WACZ,OACE,kBAACrD,EAAasD,SAAd,MACG,gBAAGzD,EAAH,EAAGA,eAAgB0D,EAAnB,EAAmBA,yBAA0BhD,EAA7C,EAA6CA,YAA7C,EAA0DW,eAA1D,OACC,kBAAC,IAAD,CACEsC,OAAO,gBACPC,gBAAiB,CAAC3D,EAAGD,EAAeC,EAAGC,EAAGF,EAAeE,GACzD2D,SAAUH,EAA2B,CAAEzD,EAAGD,EAAeC,EAAGC,EAAGF,EAAeE,GAAM,MAEpF,yBAAKyC,GAAG,QAAQO,UAAU,eAAeY,MAAO,CAC9CC,UAAW/D,IAEX,yBAAKkD,UAAU,6BACX,oCACE,yBAAKA,UAAU,cACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,uBAKf,wBAAIA,UAAU,eAAd,kBAEN,yBAAKA,UAAU,iBACb,4BAAKxC,GAQL,kBAAC,EAAD,gBCvBPsD,MARf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QCPNC,IAASC,OACP,oCACE,kBAAC,EAAD,OACGC,SAASC,eAAe,kB","file":"static/js/main.96c3df78.chunk.js","sourcesContent":["\nconst useWindowPosition = () => {\n  return {\n    windowPosition:  { x: 1000, y: -20 },\n  }\n};\n\nexport default useWindowPosition;\n","import React, { useEffect, useState } from 'react';\nimport useWindowPosition from '../Hooks/useWindowPosition';\n\nexport const ModalContext = React.createContext({});\n\nconst ModalProvider = ({ children }) => {\n  const { windowPosition } = useWindowPosition();\n  const [extensionId, setExtensionId] = useState(undefined);\n\n  function getExtensionId() {\n    window.postMessage({ type: \"GET_EXTENSION_ID\" }, \"*\");\n  }\n\n  useEffect(() => {\n    // Set up event listeners from Content script\n    window.addEventListener(\"message\", function(event) {\n      if (event.source !== window) return;\n      if (event.data.type && (event.data.type === \"EXTENSION_ID_RESULT\")) {\n        setExtensionId(event.data.extensionId);\n      }\n    });\n  }, []);\n\n  return (\n    <ModalContext.Provider\n      value={{\n        extensionId,\n        getExtensionId,\n        windowPosition,\n      }}\n    >\n      {children}\n    </ModalContext.Provider>\n  );\n};\n\nexport default ModalProvider;\n","const live_peer_data = {\n    \"livePeerServerUrl\": \"rtmp://rtmp.livepeer.com/live/\",\n    \"streamKey\": \"example stream key goes here\",\n    \"playbackUrl\": \"https://cdn.livepeer.com/hls/unique_playback_id_goes_here/index.m3u8\"\n}\n\nexport default live_peer_data;\n","const content = {\n    \"name\": \"test_stream\", \n    \"profiles\": [\n        {\n            \"name\": \"720p\",\n            \"bitrate\": 2000000,\n            \"fps\": 30,\n            \"width\": 1280,\n            \"height\": 720\n        },\n        {\n            \"name\": \"480p\",\n            \"bitrate\": 1000000,\n            \"fps\": 30,\n            \"width\": 854,\n            \"height\": 480\n        },\n        {\n            \"name\": \"360p\",\n            \"bitrate\": 500000,\n            \"fps\": 30,\n            \"width\": 640,\n            \"height\": 360\n        },\n    ],\n    \"record\": true\n}\n\nexport default content;","import React, { useState, useEffect } from 'react';\nimport live_peer_data from '../Livepeer/live_peer_data';\nimport '../css/window.scss';\nimport ShakaPlayer from 'shaka-player-react';\nimport 'shaka-player/dist/controls.css';\nimport LivePeerAPI from '../Livepeer/live_peer_api';\nimport { Player } from 'video-react';\nimport VideoPlayer from './video_player.js';\nimport MainRecorder from './main_recorder';\nimport { RecordRTCPromisesHandler } from 'recordrtc';\nimport { saveAs } from 'file-saver';\nimport startRecording from './start_recording';\nimport stopRecording from './stop_recording';\nimport downloadRecording from './download_recoding';\nimport axios from 'axios';\n\n// imports for livepeer api\n// import stopStream from '../Livepeer/live_peer_functions';\nimport content from '../Livepeer/content_livepeer';\n\nconst WindowContent = () => {\n    // livepeer api package\n    const Livepeer = require('livepeer-nodejs');\n    const apiKey = process.env.REACT_APP_API_KEY;\n    const livepeerObject = new Livepeer(apiKey);\n\n    // url to play in the video player\n    const example_video_url = \"https://storage.googleapis.com/shaka-demo-assets/angel-one/dash.mpd\";\n    var live_peer_demo_url = \"https://mdw-cdn.livepeer.com/recordings/2bf2222d-b82e-4758-bce8-2a6fa04e5550/index.m3u8\";\n    live_peer_demo_url = \"https://mdw-cdn.livepeer.com/recordings/bbc3ca03-e570-4c55-b97d-afc2aa41fdc8/source.mp4\";\n    \n    // using state to store data relatively (livepeer response data)\n    const [data, setData] = useState([]);\n    const [streamUrl, setStreamUrl] = useState(null);\n\n    // create a stream using livepeer's api\n    const startStream = () => {\n        livepeerObject.Stream.create(content)\n        .then(res => {\n            console.log(res);\n            setData(res);\n        })\n    }\n\n    useEffect(() => {\n        startStream();\n    }, []);\n\n\n    const stopStream = async () => {\n        const url = `https://livepeer.com/api/stream/${data.id}/terminate`;\n    \n        await axios.delete(url, {\n            headers: {\n                Authorization: `Bearer ${apiKey}`\n            },\n        });\n    }\n\n    const someData = async () => {\n        const url = `https://livepeer.com/api/session?limit=20&parentId=${data.id}`;\n\n        const listOfAllStreams = await axios.get(url, {\n            headers: {\n                Authorization: `Bearer ${apiKey}`\n            }\n        });\n        console.log(listOfAllStreams);\n        console.log(listOfAllStreams.data[0].mp4Url);\n        setStreamUrl(listOfAllStreams.data[0].mp4Url);\n    }\n\n    // console.log(window.location.href);\n\n    return (\n        <div>\n            <h4 className=\"text\">\n                Connect via OBS Studio:\n                <br />\n                Set OBS settings: settings {'>'} stream. set service to custom\n                <br />\n                set server to: {live_peer_data.livePeerServerUrl}\n                <br />\n                {/* <LivePeerAPI className=\"live-peer-data\"/> */}\n                <p>Stream Key: {data.streamKey}</p>\n                <p>Playback URL: https://cdn.livepeer.com/hls/{data.playbackId}/index.m3u8</p>\n                <p>Stream id: {data.id}</p>\n                <p>Link URL: {streamUrl}</p>\n            </h4>\n            <button onClick={someData}>Stop Streaming</button>\n            {/* <VideoPlayer playsInLine src=\"https://mdw-cdn.livepeer.com/recordings/9ffba687-6059-4aa3-8d12-0235a79701aa/source.mp4\" /> */}\n            <ShakaPlayer src={streamUrl}/>\n        </div>\n    );\n}\n\nexport default WindowContent;\n","import React from 'react';\nimport { X } from 'react-feather';\nimport Draggable from 'react-draggable';\nimport { ModalContext } from '../Contexts/ModalProvider';\nimport '../css/window.scss';\nimport WindowContent from './window_content';\n\nconst Modal = () => {\n  return (\n    <ModalContext.Consumer>\n      {({ windowPosition, hasDraggedWindowPosition, extensionId, getExtensionId }) => (\n        <Draggable\n          handle=\".modal-handle\"\n          defaultPosition={{x: windowPosition.x, y: windowPosition.y}}\n          position={hasDraggedWindowPosition ? { x: windowPosition.x, y: windowPosition.y } : null}\n        >\n          <div id=\"modal\" className=\"modal-window\" style={{\n            transform: windowPosition,\n        }}>\n            <div className=\"modal-window-inner-border\">\n                <>\n                  <div className=\"modal-body\">\n                      <div className=\"modal-handle\">\n                          <div className=\"modal-close-button\">\n                              {/* <a onClick={() => null}>\n                              <X color=\"#5d6484\" size=\"14\" />\n                              </a> */}\n                          </div>\n                          <h6 className=\"handle-text\">Click to drag</h6>\n                      </div>\n                    <div className=\"modal-content\">\n                      <h3>{extensionId}</h3>\n                      {/* <button\n                        onClick={getExtensionId}\n                        className=\"modal-button\"\n                      >\n                        Get Extension ID\n                      </button> */}\n                      {/* <button className=\"some-button\">Some Button to do Something</button> */}\n                      <WindowContent />\n                    </div>\n                  </div>\n                </>\n              </div>\n          </div>\n        </Draggable>\n      )}\n    </ModalContext.Consumer>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport './App.css';\nimport Modal from './Components/Modal';\nimport ModalProvider from './Contexts/ModalProvider';\n\n/**\n * @return {null}\n */\nfunction App() {\n  return (\n    <ModalProvider>\n      <Modal />\n    </ModalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>, document.getElementById('modal-window'));\n"],"sourceRoot":""}