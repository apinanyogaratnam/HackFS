{"version":3,"sources":["Hooks/useWindowPosition.js","Contexts/ModalProvider.js","livepeer-integration/livepeer_data.js","Components/window_content.js","Components/Modal.js","App.js","index.js"],"names":["useWindowPosition","windowPosition","x","y","ModalContext","React","createContext","ModalProvider","children","useState","undefined","extensionId","setExtensionId","useEffect","window","addEventListener","event","source","data","type","Provider","value","getExtensionId","postMessage","livepeer_data","WindowContent","className","livepeerServerUrl","streamKey","autoPlay","src","Modal","Consumer","hasDraggedWindowPosition","handle","defaultPosition","position","id","style","transform","App","ReactDOM","render","document","getElementById"],"mappings":"kQAOeA,EANW,WACxB,MAAO,CACLC,eAAiB,CAAEC,EAAG,IAAKC,EAAG,OCArBC,EAAeC,IAAMC,cAAc,IAiCjCC,EA/BO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACfP,EAAmBD,IAAnBC,eACR,EAAsCQ,wBAASC,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAgBA,OAVAC,qBAAU,WAERC,OAAOC,iBAAiB,WAAW,SAASC,GACtCA,EAAMC,SAAWH,QACjBE,EAAME,KAAKC,MAA6B,wBAApBH,EAAME,KAAKC,MACjCP,EAAeI,EAAME,KAAKP,kBAG7B,IAGD,kBAACP,EAAagB,SAAd,CACEC,MAAO,CACLV,cACAW,eAlBN,WACER,OAAOS,YAAY,CAAEJ,KAAM,oBAAsB,MAkB7ClB,mBAGDO,ICzBQgB,G,KANO,CAClB,kBAAqB,iCACrB,UAAa,+BACb,YAAe,8D,gBCoBJC,G,MAjBO,WAClB,OACI,6BACI,wBAAIC,UAAU,QAAd,0BAEI,6BAFJ,2DAII,6BAJJ,kBAKoBF,EAAcG,kBAC9B,6BANJ,sBAOwBH,EAAcI,WAEtC,kBAAC,IAAD,CAAaC,UAAQ,EAACC,IAAI,2ECiCvBC,EA5CD,WACZ,OACE,kBAAC3B,EAAa4B,SAAd,MACG,gBAAG/B,EAAH,EAAGA,eAAgBgC,EAAnB,EAAmBA,yBAA0BtB,EAA7C,EAA6CA,YAA7C,EAA0DW,eAA1D,OACC,kBAAC,IAAD,CACEY,OAAO,gBACPC,gBAAiB,CAACjC,EAAGD,EAAeC,EAAGC,EAAGF,EAAeE,GACzDiC,SAAUH,EAA2B,CAAE/B,EAAGD,EAAeC,EAAGC,EAAGF,EAAeE,GAAM,MAEpF,yBAAKkC,GAAG,QAAQX,UAAU,eAAeY,MAAO,CAC9CC,UAAWtC,IAEX,yBAAKyB,UAAU,6BACX,oCACE,yBAAKA,UAAU,cACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,uBAKf,wBAAIA,UAAU,eAAd,kBAEF,yBAAKA,UAAU,iBACb,4BAAKf,GAQL,kBAAC,EAAD,gBCvBP6B,MARf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QCPNC,IAASC,OACP,oCACE,kBAAC,EAAD,OACGC,SAASC,eAAe,kB","file":"static/js/main.875e922b.chunk.js","sourcesContent":["\nconst useWindowPosition = () => {\n  return {\n    windowPosition:  { x: 100, y: 100 },\n  }\n};\n\nexport default useWindowPosition;\n","import React, { useEffect, useState } from 'react';\nimport useWindowPosition from '../Hooks/useWindowPosition';\n\nexport const ModalContext = React.createContext({});\n\nconst ModalProvider = ({ children }) => {\n  const { windowPosition } = useWindowPosition();\n  const [extensionId, setExtensionId] = useState(undefined);\n\n  function getExtensionId() {\n    window.postMessage({ type: \"GET_EXTENSION_ID\" }, \"*\");\n  }\n\n  useEffect(() => {\n    // Set up event listeners from Content script\n    window.addEventListener(\"message\", function(event) {\n      if (event.source !== window) return;\n      if (event.data.type && (event.data.type === \"EXTENSION_ID_RESULT\")) {\n        setExtensionId(event.data.extensionId);\n      }\n    });\n  }, []);\n\n  return (\n    <ModalContext.Provider\n      value={{\n        extensionId,\n        getExtensionId,\n        windowPosition,\n      }}\n    >\n      {children}\n    </ModalContext.Provider>\n  );\n};\n\nexport default ModalProvider;\n","const livepeer_data = {\n    \"livepeerServerUrl\": \"rtmp://rtmp.livepeer.com/live/\",\n    \"streamKey\": \"example stream key goes here\",\n    \"playbackUrl\": \"https://cdn.livepeer.com/hls/unique_playback_id_goes_here\"\n}\n\nexport default livepeer_data;\n","import React from 'react';\nimport livepeer_data from '../livepeer-integration/livepeer_data';\nimport '../css/window.scss';\nimport ShakaPlayer from 'shaka-player-react';\nimport 'shaka-player/dist/controls.css';\n\nconst WindowContent = () => {\n    return (\n        <div>\n            <h4 className=\"text\">\n                Connect via OBS Studio:\n                <br />\n                Set OBS settings: settings>stream. set service to custom\n                <br />\n                set server to: {livepeer_data.livepeerServerUrl}\n                <br />\n                set stream key to: {livepeer_data.streamKey}\n            </h4>\n            <ShakaPlayer autoPlay src=\"https://storage.googleapis.com/shaka-demo-assets/angel-one/dash.mpd\" />\n        </div>\n    )\n}\n\nexport default WindowContent;\n","import React from 'react';\nimport { X } from 'react-feather';\nimport Draggable from 'react-draggable';\nimport { ModalContext } from '../Contexts/ModalProvider';\nimport '../css/window.scss';\nimport WindowContent from './window_content';\n\nconst Modal = () => {\n  return (\n    <ModalContext.Consumer>\n      {({ windowPosition, hasDraggedWindowPosition, extensionId, getExtensionId }) => (\n        <Draggable\n          handle=\".modal-handle\"\n          defaultPosition={{x: windowPosition.x, y: windowPosition.y}}\n          position={hasDraggedWindowPosition ? { x: windowPosition.x, y: windowPosition.y } : null}\n        >\n          <div id=\"modal\" className=\"modal-window\" style={{\n            transform: windowPosition,\n        }}>\n            <div className=\"modal-window-inner-border\">\n                <>\n                  <div className=\"modal-body\">\n                    <div className=\"modal-handle\">\n                      <div className=\"modal-close-button\">\n                        {/* <a onClick={() => null}>\n                        <X color=\"#5d6484\" size=\"14\" />\n                        </a> */}\n                      </div>\n                      <h6 className=\"handle-text\">Click to drag</h6>\n                    </div>\n                    <div className=\"modal-content\">\n                      <h3>{extensionId}</h3>\n                      {/* <button\n                        onClick={getExtensionId}\n                        className=\"modal-button\"\n                      >\n                        Get Extension ID\n                      </button> */}\n                      {/* <button className=\"some-button\">Some Button to do Something</button> */}\n                      <WindowContent />\n                    </div>\n                  </div>\n                </>\n              </div>\n          </div>\n        </Draggable>\n      )}\n    </ModalContext.Consumer>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport './App.css';\nimport Modal from './Components/Modal';\nimport ModalProvider from './Contexts/ModalProvider';\n\n/**\n * @return {null}\n */\nfunction App() {\n  return (\n    <ModalProvider>\n      <Modal />\n    </ModalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>, document.getElementById('modal-window'));\n"],"sourceRoot":""}