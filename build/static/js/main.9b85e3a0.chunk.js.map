{"version":3,"sources":["Hooks/useWindowPosition.js","Contexts/ModalProvider.js","Livepeer/live_peer_data.js","Livepeer/content_livepeer.js","Components/window_content.js","Components/Modal.js","App.js","index.js"],"names":["useWindowPosition","windowPosition","x","y","ModalContext","React","createContext","ModalProvider","children","useState","undefined","extensionId","setExtensionId","useEffect","window","addEventListener","event","source","data","type","Provider","value","getExtensionId","postMessage","live_peer_data","content","WindowContentWrapperCSS","styled","div","WindowContent","Livepeer","require","apiKey","process","livepeerObject","setData","streamUrl","setStreamUrl","Stream","create","then","res","getStreamUrl","a","url","id","axios","get","headers","Authorization","listOfAllStreams","length","alert","mp4Url","className","livePeerServerUrl","streamKey","playbackId","onClick","src","Modal","Consumer","hasDraggedWindowPosition","handle","defaultPosition","position","style","transform","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b85e3a0.chunk.js","sourcesContent":["\nconst useWindowPosition = () => {\n  return {\n    windowPosition:  { x: 1000, y: -20 },\n  }\n};\n\nexport default useWindowPosition;\n","import React, { useEffect, useState } from 'react';\nimport useWindowPosition from '../Hooks/useWindowPosition';\n\nexport const ModalContext = React.createContext({});\n\nconst ModalProvider = ({ children }) => {\n  const { windowPosition } = useWindowPosition();\n  const [extensionId, setExtensionId] = useState(undefined);\n\n  function getExtensionId() {\n    window.postMessage({ type: \"GET_EXTENSION_ID\" }, \"*\");\n  }\n\n  useEffect(() => {\n    // Set up event listeners from Content script\n    window.addEventListener(\"message\", function(event) {\n      if (event.source !== window) return;\n      if (event.data.type && (event.data.type === \"EXTENSION_ID_RESULT\")) {\n        setExtensionId(event.data.extensionId);\n      }\n    });\n  }, []);\n\n  return (\n    <ModalContext.Provider\n      value={{\n        extensionId,\n        getExtensionId,\n        windowPosition,\n      }}\n    >\n      {children}\n    </ModalContext.Provider>\n  );\n};\n\nexport default ModalProvider;\n","const live_peer_data = {\n    \"livePeerServerUrl\": \"rtmp://rtmp.livepeer.com/live/\",\n    \"streamKey\": \"example stream key goes here\",\n    \"playbackUrl\": \"https://cdn.livepeer.com/hls/unique_playback_id_goes_here/index.m3u8\"\n}\n\nexport default live_peer_data;\n","const content = {\n    \"name\": \"test_stream\", \n    \"profiles\": [\n        {\n            \"name\": \"720p\",\n            \"bitrate\": 2000000,\n            \"fps\": 30,\n            \"width\": 1280,\n            \"height\": 720\n        },\n        {\n            \"name\": \"480p\",\n            \"bitrate\": 1000000,\n            \"fps\": 30,\n            \"width\": 854,\n            \"height\": 480\n        },\n        {\n            \"name\": \"360p\",\n            \"bitrate\": 500000,\n            \"fps\": 30,\n            \"width\": 640,\n            \"height\": 360\n        },\n    ],\n    \"record\": true\n}\n\nexport default content;","import React, { useState, useEffect } from 'react';\nimport live_peer_data from '../Livepeer/live_peer_data';\nimport '../css/window.scss';\nimport ShakaPlayer from 'shaka-player-react';\nimport 'shaka-player/dist/controls.css';\nimport axios from 'axios';\nimport styled from \"styled-components\";\nimport content from \"../Livepeer/content_livepeer\";\n\nconst WindowContent = () => {\n    // livepeer api package\n    const Livepeer = require('livepeer-nodejs');\n    const apiKey = process.env.REACT_APP_API_KEY;\n    const livepeerObject = new Livepeer(apiKey);\n\n    // using state to store data relatively (livepeer response data)\n    const [data, setData] = useState([]);\n    const [streamUrl, setStreamUrl] = useState(null);\n\n    // create a stream using livepeer's api\n    const startStream = () => {\n        livepeerObject.Stream.create(content).then((res) => {\n            setData(res);\n        });\n    };\n\n    useEffect(() => {\n        startStream();\n    }, []);\n\n    const getStreamUrl = async () => {\n        const url = `https://livepeer.com/api/session?limit=20&parentId=${data.id}`;\n\n        const listOfAllStreams = await axios.get(url, {\n            headers: {\n                Authorization: `Bearer ${apiKey}`,\n            },\n        });\n        \n        if (listOfAllStreams.data.length === 0) {\n            alert(\"No stream detected\");\n            return;\n        }\n\n        setStreamUrl(listOfAllStreams.data[0].mp4Url);\n\n        if (streamUrl === \"\") alert(\"stream is currently processing\");\n    };\n\n    // console.log(window.location.href);\n\n    return (\n        <WindowContentWrapperCSS>\n            <h4 className=\"text\">\n                Connect via OBS Studio:\n                <br />\n                Set OBS settings: settings {\">\"} stream. set service to custom\n                <br />\n                set server to: {live_peer_data.livePeerServerUrl}\n                <br />\n                <p>Stream Key: {data.streamKey}</p>\n                <p>\n                    Playback URL: https://cdn.livepeer.com/hls/{data.playbackId}/index.m3u8\n                </p>\n                <p>Stream id: {data.id}</p>\n                <p>Link URL: {streamUrl}</p>\n            </h4>\n            <button onClick={getStreamUrl}>Play Stream</button>\n            <ShakaPlayer src={streamUrl} />\n        </WindowContentWrapperCSS>\n    );\n};\n\nconst WindowContentWrapperCSS = styled.div`\n  background-color: purple;\n  width: 100%;\n  height: 100%;\n`;\n\nexport default WindowContent;\n","import React from 'react';\nimport Draggable from 'react-draggable';\nimport { ModalContext } from '../Contexts/ModalProvider';\nimport '../css/window.scss';\nimport WindowContent from './window_content';\n\nconst Modal = () => {\n\n  return (\n      <ModalContext.Consumer>\n        {({ windowPosition, hasDraggedWindowPosition, extensionId, getExtensionId }) => (\n            <Draggable\n              handle=\".modal-handle\"\n              defaultPosition={{x: windowPosition.x, y: windowPosition.y}}\n              position={hasDraggedWindowPosition ? { x: windowPosition.x, y: windowPosition.y } : null}\n            >\n              <div id=\"modal\" className=\"modal-window\" style={{\n                transform: windowPosition,\n              }}>\n                  <div className=\"modal-window-inner-border\">\n                      <>\n                          <div className=\"modal-body\">\n                            <div className=\"modal-handle\">\n                                <div className=\"modal-close-button\">\n                                </div>\n                                <h6 className=\"handle-text\">Click to drag</h6>\n                            </div>\n                            <div className=\"modal-content\">\n                              <h3>{extensionId}</h3>\n                              <WindowContent />\n                            </div>\n                          </div>\n                      </>\n                  </div>\n              </div>\n            </Draggable>\n        )}\n      </ModalContext.Consumer>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport './App.css';\nimport Modal from './Components/Modal';\nimport ModalProvider from './Contexts/ModalProvider';\n\n/**\n * @return {null}\n */\nfunction App() {\n  return (\n    <ModalProvider>\n      <Modal />\n    </ModalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>, document.getElementById('modal-window'));\n"],"sourceRoot":""}